name: Python ML application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Calling a pre-built GitHub Action which allows your Action to access your repository.
    - name: Checkout repo  #무엇을 의미?
      uses: actions/checkout@v2
    - name: Setup Python 3.8
      uses: actions/setup-python@v2 #왜 v2를 사용? v마다 차이점?
      with:
        python-version: 3.8
    - name: Install dependencies   # 중요. Conda를 사용하는 방법도 있음
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requiremens.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8   # 공부 필요
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.PROD_AWS_REGION }}
    - uses: actions/checkout@v2 # 왜 다시...?
    - name: Setup DVC
      uses: iterative/setup-dvc@v1
    - name: Pull artifacts
      run: |
        dvc pull
    - name: Test with pytest
      run: |
        pytest












#
#name: Test pipeline
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v2
#      - name: Setup Python
#        uses: actions/setup-python@v1
#        with:
#          python-version: 3.8
#      - name: Install dependencies
#        run: pip install -r requirements.txt
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1
#      - name: Setup DVC
#        uses: iterative/setup-dvc@v1
#      - name: Pull data from DVC
#        run: dvc pull data -R
#      - name: Run Flake8
#        run: flake8
#      - name: Run pytest
#        run: pytest
#
#
#
#
#name: Python application
#
#on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python 3.8.10
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.8.10
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8 pytest
#        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Configure AWS Credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: eu-west-2
#    - name: Install DVC
#      uses: iterative/setup-dvc@v1
#    - name: Configure DVC
#      run: |
#        dvc pull
#    - name: Test with pytest
#      run: |
#        pytest
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#name: Python Package using Conda
#
#on: [push]
#
#jobs:
#  build-linux:
#    runs-on: ubuntu-latest
#    strategy:
#      max-parallel: 5
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python 3.8
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.8
#    - name: Add conda to system path
#      run: |
#        # $CONDA is an environment variable pointing to the root of the miniconda directory
#        echo $CONDA/bin >> $GITHUB_PATH
#    - name: Install dependencies
#      run: |
#        conda env update --file environment.yml --name base
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Configure AWS Credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
#        aws-region: ${{secrets.aws_region}}
#    - uses: actions/checkout@v2
#    - uses: iterative/setup-dvc@v1
#    - run: dvc remote add -d s3-bucket s3://uda3/storage
#    - run: dvc pull
#    - name: Test with pytest
#      run: |
#        pytest