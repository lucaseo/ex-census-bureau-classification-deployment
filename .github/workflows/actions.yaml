name: Python ML application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Calling a pre-built GitHub Action which allows your Action to access your repository.
    - name: Checkout repo  #무엇을 의미?
      uses: actions/checkout@v2

    - name: Setup Python 3.8
      uses: actions/setup-python@v2 #왜 v2를 사용? v마다 차이점?
      with:
        python-version: 3.8

    - name: Install dependencies   # 중요. Conda를 사용하는 방법도 있음
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8   # 공부 필요
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - uses: actions/checkout@v2 # 왜 다시...?

    - name: Setup DVC
      uses: iterative/setup-dvc@v1

    - name: Pull artifacts
      run: |
        dvc pull

    - name: Test with pytest
      run: |
        pytest

